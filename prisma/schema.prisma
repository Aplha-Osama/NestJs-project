generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  hash  String

  firstName String?
  lastName  String?
  bookmarks Bookmark[]

  //  relation with Product one to Many as a seller
  products Product[]

  // relation with order table m-n
  orders UserOrder[]

  @@map("users")
}

model Bookmark {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String
  description String?
  link        String

  userId Int
  user   User @relation(fields: [userId], references: [id])

  @@map("bookmarks")
}

model Product {
  id           Int          @id @default(autoincrement())
  name         String       @unique
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  price        Float
  sale         Boolean      @default(false)
  availability Availability

  // relation with User Model one to one
  userId Int
  user   User @relation(fields: [userId], references: [id])

  // relation b/w product and order  one to many 
  orders Order[]
}

enum Availability {
  IN_STORE
  ONLINE
}

model Order {
  id          Int         @id @default(autoincrement())
  orderNumber String      @unique
  totalPrice  Float
  status      String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  userId      Int // Foreign key reference to User
  users       UserOrder[]

  // relation b/w product and order  one to many 
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model UserOrder {
  id Int @id @default(autoincrement())

  userId  Int // Foreign key reference to User
  orderId Int // Foreign key reference to Order

  user User @relation(fields: [userId], references: [id])

  order Order @relation(fields: [orderId], references: [id])

  @@unique([userId, orderId])
}
